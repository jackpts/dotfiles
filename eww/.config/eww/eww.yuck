;; (include "style.css")

(defwidget clock-widget []
  (box
    :orientation "horizontal"
    :spacing 10
    ;; :padding 10
    :halign "center"
    :valign "center"
    (label :text (shell :command "date +'%H:%M:%S'"))))

(defwidget battery-widget []
  (box
    :orientation "horizontal"
    :spacing 10
    ;; :padding 10
    :halign "center"
    :valign "center"
    (label :text (shell :command "cat /sys/class/power_supply/BAT0/capacity"))
    (label :text "%")))

(defwidget network-widget []
  (box
    :orientation "horizontal"
    :spacing 10
    ;; :padding 10
    :halign "center"
    :valign "center"
    (label :text (shell :command "iwconfig wlan0 | grep 'Signal level' | awk '{print $4}' | sed 's/[^0-9]*//g'"))
    (label :text "dBm")))


(defwidget weather-widget []
  (box
    :orientation "horizontal"
    :spacing 10
    ;; :padding 10
    :halign "center"
    :valign "center"
    (label :text (shell :command "curl -s 'wttr.in/T?format=%C+%t'"))))

(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    ;; (music)
    ;; (launcher)
    (volume)
    (sidestuff)))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "wmctrl -s 0" 1)
    (button :onclick "wmctrl -s 1" 2)
    (button :onclick "wmctrl -s 2" 3)
    (button :onclick "wmctrl -s 3" 4)
    (button :onclick "wmctrl -s 4" 5)
    (button :onclick "wmctrl -s 5" 6)
    (button :onclick "wmctrl -s 6" 7)
    (button :onclick "wmctrl -s 7" 8)
    (button :onclick "wmctrl -s 8" 9)))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ${music}" : ""}))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    ;; (metric :label "üîä"
    ;;         :value volume
    ;;         :onchange "amixer -D pulse sset Master {}%")
    ;; (metric :label "Ô°ö"
    ;;         :value {EWW_RAM.used_mem_perc}
    ;;         :onchange "")
    ;; (metric :label "üíæ"
    ;;         :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
    ;;         :onchange "")
    (time)
    (power)
    ))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")


(defwindow dock-bar
    :monitor 0
    :windowtype "dock"
    :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "40px"
                      :anchor "top center")
    :reserve (struts :side "top" :distance "4%")
    :wm-ignore false
	:hexpand "false"
	:vexpand "false"
  (box
    :orientation "horizontal"
    :spacing 10
    ;; :padding 10
    :halign "center"
    :valign "center"
    ;; (clock-widget)
    ;; (battery-widget)
    ;; (network-widget)
    ;; (weather-widget)
    (bar)
))

(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww/bar")

;; Powermenu Widgets ;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"	
				:onhoverlost "${eww} update power=false" 
	(box		:orientation "h"					
				:space-evenly "false" 	 
				:vexpand "false" 	
				:class "powermenu"
	(revealer	:transition "slideup"				
				:reveal power			 
				:duration "550ms"
	(box		:orientation "h"					
				:space-evenly "false"

	(button   	:class "button-bspres"  			
				:tooltip "BSPWM Restart" 
				;; :onclick "bspc wm -r"
                        "Óßá" 
                    )

  	(button		:class "button-reb"					
	  			:tooltip "Reboot"		 
				;; :onclick "reboot"	
                        "ÓßÉ")

	(button		:class "button-quit" 				
				:tooltip "Logout" 		 
				;; :onclick "killall bspwm"
                        "Ó¶ë"
                    )

	(button		:class "button-lock" 				
				:tooltip "Lock Screen"	 
				;; :onclick "betterlockscreen -l"	
                        "Ó¶è"
                    )))

	(button		:class "button-off"					
				:tooltip "Shutdown"		 
				;; :onclick "shutdown now"	
                "ÓßÄ"
    ))))
(defvar power false)


;; Clock Widgets ;;
(defwidget time []
	(box	:orientation "h" 
			:class "time" 
			:valign "end"
	(button	:onclick "scripts/popup calendar"	
			:class "time-hour" hour)
	(button	:onclick "scripts/popup calendar"	
			:class "time-min"  min)))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")


(defwidget launcher []
	(box :orientation "h" 
		 :space-evenly "false" 
		 :spacing -15
  	(button :class "launcher_icon" 
		   	:onclick "scripts/popup launcher"  "ÓÄß")))

;; Volume Widgets ;;
(defwidget volume []
	(eventbox :onhover "${eww} update volum=true" 		
			  :onhoverlost "${eww} update volum=false"
	(box      :orientation "h" 	  
			  :space-evenly "false" 
			  :spacing "2"
	(revealer :transition "slideup" 
			  :reveal volum         
			  :duration "550ms"
	(scale    :class "volbar" 	  
			  :value current-volume 
			  :orientation "h"      
			  :flipped true 
			  :tooltip "Volume: ${current-volume}%" 
			  :max 101 
			  :min 0 
			  :onchange "amixer -D pulse sset Master {}%" ))
	(button   :onclick "scripts/popup audio"   :class "volume-icon" "ÓÅê"))))
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar volum false)
